apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-tekton-nightly
spec:
  params:
  - name: package
  - name: resources
    description: space separated list of resources to be deleted
    default: "conditions pipelineresources tasks pipelines taskruns pipelineruns"
  resources:
    inputs:
    - name: plumbing-source
      type: git
    - name: tekton-project-source
      type: git
      targetPath: src/$(params.package)
  workspaces:
  - name: k8s-shared
    description: |
      k8s config
    mountPath: /root/.kube
  steps:
  - name: cleanup-resources
    image: gcr.io/tekton-releases/dogfooding/kubectl:latest
    env:
    - name: KUBECONFIG
      value: /root/.kube/config
    command:
    - /bin/sh
    args:
    - -ce
    - |
      kubectl delete ns -l tekton.dev/test-e2e=true
      for res in $(params.resources); do
        kubectl delete --ignore-not-found=true ${res}.tekton.dev --all || return true
      done
  - name: uninstall-tekton-project
    image: gcr.io/tekton-releases/dogfooding/test-runner:latest
    workingdir: /workspace/src/$(params.package)
    env:
    - name: KUBECONFIG
      value: /root/.kube/config
    command:
    - /bin/bash
    args:
    - -ce
    - |
      source $(resources.inputs.plumbing-source.path)/scripts/library.sh
      ko delete --ignore-not-found=true -f config/
      wait_until_object_does_not_exist namespace tekton-pipelines
